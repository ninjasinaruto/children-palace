<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LeaveCourseDataSet" targetNamespace="http://tempuri.org/LeaveCourseDataSet.xsd" xmlns:mstns="http://tempuri.org/LeaveCourseDataSet.xsd" xmlns="http://tempuri.org/LeaveCourseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ChildrenPalaceConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ChildrenPalaceConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ShaoNianGong.Properties.Settings.GlobalReference.Default.ChildrenPalaceConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LeaveCourseTableAdapter" GeneratorDataComponentClassName="LeaveCourseTableAdapter" Name="LeaveCourse" UserDataComponentName="LeaveCourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ChildrenPalaceConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT   students_1.Name, students_1.Telephone, students_1.Address, students_1.ExpireTime, 
                student_refund_1.RefundReason, student_refund_1.RefundDate, student_refund_1.RefundAmount, 
                course_types_1.ID AS CourseTypeID, course_types_1.CourseTypeName, course_subtypes_1.CourseSubtypeName, 
                courses_1.ID AS CourseID, courses_1.CourseName, tearchers_1.Name AS TeacherName, student_refund_1.Operator,
                    (SELECT   COUNT(0) AS Expr1
                     FROM      (SELECT DISTINCT student_refund.StudentID
                                      FROM      student_refund INNER JOIN
                                                      student_refund AS sr ON sr.StudentID = student_refund.StudentID INNER JOIN
                                                      courses ON student_refund.CourseID = courses.ID INNER JOIN
                                                      course_subtypes ON courses.CourseSubTypeID = course_subtypes.ID INNER JOIN
                                                      course_types ON course_subtypes.CourseTypeID = course_types.ID INNER JOIN
                                                      students ON student_refund.StudentID = students.ID LEFT OUTER JOIN
                                                      tearchers ON courses.TeacherID = tearchers.ID) AS ct) AS StudentCount
FROM      student_refund AS student_refund_1 INNER JOIN
                courses AS courses_1 ON student_refund_1.CourseID = courses_1.ID INNER JOIN
                course_subtypes AS course_subtypes_1 ON courses_1.CourseSubTypeID = course_subtypes_1.ID INNER JOIN
                course_types AS course_types_1 ON course_subtypes_1.CourseTypeID = course_types_1.ID INNER JOIN
                students AS students_1 ON student_refund_1.StudentID = students_1.ID LEFT OUTER JOIN
                tearchers AS tearchers_1 ON courses_1.TeacherID = tearchers_1.ID
WHERE   (student_refund_1.ID =
                    (SELECT   MAX(ID) AS MaxID
                     FROM      student_refund AS sr
                     WHERE   (student_refund_1.StudentID = StudentID) AND (student_refund_1.CourseID = CourseID)))
ORDER BY student_refund_1.RefundDate DESC</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Telephone" DataSetColumn="Telephone" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
              <Mapping SourceColumn="ExpireTime" DataSetColumn="ExpireTime" />
              <Mapping SourceColumn="RefundReason" DataSetColumn="RefundReason" />
              <Mapping SourceColumn="RefundDate" DataSetColumn="RefundDate" />
              <Mapping SourceColumn="RefundAmount" DataSetColumn="RefundAmount" />
              <Mapping SourceColumn="CourseTypeName" DataSetColumn="CourseTypeName" />
              <Mapping SourceColumn="CourseSubtypeName" DataSetColumn="CourseSubtypeName" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
              <Mapping SourceColumn="TeacherName" DataSetColumn="TeacherName" />
              <Mapping SourceColumn="Operator" DataSetColumn="Operator" />
              <Mapping SourceColumn="CourseTypeID" DataSetColumn="CourseTypeID" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="StudentCount" DataSetColumn="StudentCount" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ChildrenPalaceConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByCourse" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCourse" GeneratorSourceName="FillByCourse" GetMethodModifier="Public" GetMethodName="GetDataByCourse" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCourse" UserSourceName="FillByCourse">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT   students_1.Name, students_1.Telephone, students_1.Address, students_1.ExpireTime, 
                student_refund_1.RefundReason, student_refund_1.RefundDate, student_refund_1.RefundAmount, 
                course_types_1.ID AS CourseTypeID, course_types_1.CourseTypeName, course_subtypes_1.CourseSubtypeName, 
                courses_1.ID AS CourseID, courses_1.CourseName, tearchers_1.Name AS TeacherName, student_refund_1.Operator,
                    (SELECT   COUNT(0) AS Expr1
                     FROM      (SELECT DISTINCT student_refund.StudentID
                                      FROM      student_refund INNER JOIN
                                                      student_refund AS sr ON sr.StudentID = student_refund.StudentID INNER JOIN
                                                      courses ON student_refund.CourseID = courses.ID INNER JOIN
                                                      course_subtypes ON courses.CourseSubTypeID = course_subtypes.ID INNER JOIN
                                                      course_types ON course_subtypes.CourseTypeID = course_types.ID INNER JOIN
                                                      students ON student_refund.StudentID = students.ID LEFT OUTER JOIN
                                                      tearchers ON courses.TeacherID = tearchers.ID
                                      WHERE   (student_refund.CourseID = @CourseID)) AS ct) AS StudentCount
FROM      student_refund AS student_refund_1 INNER JOIN
                courses AS courses_1 ON student_refund_1.CourseID = courses_1.ID INNER JOIN
                course_subtypes AS course_subtypes_1 ON courses_1.CourseSubTypeID = course_subtypes_1.ID INNER JOIN
                course_types AS course_types_1 ON course_subtypes_1.CourseTypeID = course_types_1.ID INNER JOIN
                students AS students_1 ON student_refund_1.StudentID = students_1.ID LEFT OUTER JOIN
                tearchers AS tearchers_1 ON courses_1.TeacherID = tearchers_1.ID
WHERE   (student_refund_1.ID =
                    (SELECT   MAX(ID) AS MaxID
                     FROM      student_refund AS sr
                     WHERE   (student_refund_1.StudentID = StudentID) AND (student_refund_1.CourseID = CourseID))) AND 
                (student_refund_1.CourseID = @CourseID)
ORDER BY student_refund_1.RefundDate DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseID" ColumnName="CourseID" DataSourceName="ChildrenPalace.dbo.student_refund" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ChildrenPalaceConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByCourseType" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCourseType" GeneratorSourceName="FillByCourseType" GetMethodModifier="Public" GetMethodName="GetDataByCourseType" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCourseType" UserSourceName="FillByCourseType">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT   students_1.Name, students_1.Telephone, students_1.Address, students_1.ExpireTime, 
                student_refund_1.RefundReason, student_refund_1.RefundDate, student_refund_1.RefundAmount, 
                course_types_1.ID AS CourseTypeID, course_types_1.CourseTypeName, course_subtypes_1.CourseSubtypeName, 
                courses_1.ID AS CourseID, courses_1.CourseName, tearchers_1.Name AS TeacherName, student_refund_1.Operator,
                    (SELECT   COUNT(0) AS Expr1
                     FROM      (SELECT DISTINCT student_refund.StudentID
                                      FROM      student_refund INNER JOIN
                                                      student_refund AS sr ON sr.StudentID = student_refund.StudentID INNER JOIN
                                                      courses ON student_refund.CourseID = courses.ID INNER JOIN
                                                      course_subtypes ON courses.CourseSubTypeID = course_subtypes.ID INNER JOIN
                                                      course_types ON course_subtypes.CourseTypeID = course_types.ID INNER JOIN
                                                      students ON student_refund.StudentID = students.ID LEFT OUTER JOIN
                                                      tearchers ON courses.TeacherID = tearchers.ID
                                      WHERE   (course_subtypes.CourseTypeID = @CourseTypeID)) AS ct) AS StudentCount
FROM      student_refund AS student_refund_1 INNER JOIN
                courses AS courses_1 ON student_refund_1.CourseID = courses_1.ID INNER JOIN
                course_subtypes AS course_subtypes_1 ON courses_1.CourseSubTypeID = course_subtypes_1.ID INNER JOIN
                course_types AS course_types_1 ON course_subtypes_1.CourseTypeID = course_types_1.ID INNER JOIN
                students AS students_1 ON student_refund_1.StudentID = students_1.ID LEFT OUTER JOIN
                tearchers AS tearchers_1 ON courses_1.TeacherID = tearchers_1.ID
WHERE   (student_refund_1.ID =
                    (SELECT   MAX(ID) AS MaxID
                     FROM      student_refund AS sr
                     WHERE   (student_refund_1.StudentID = StudentID) AND (student_refund_1.CourseID = CourseID))) AND 
                (course_subtypes_1.CourseTypeID = @CourseTypeID)
ORDER BY student_refund_1.RefundDate DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseTypeID" ColumnName="CourseTypeID" DataSourceName="ChildrenPalace.dbo.course_subtypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseTypeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseTypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ChildrenPalaceConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByStudentID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByStudentID" GeneratorSourceName="FillByStudentID" GetMethodModifier="Public" GetMethodName="GetDataByStudentID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByStudentID" UserSourceName="FillByStudentID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT   students_1.Name, students_1.Telephone, students_1.Address, students_1.ExpireTime, 
                student_refund_1.RefundReason, student_refund_1.RefundDate, student_refund_1.RefundAmount, 
                course_types_1.ID AS CourseTypeID, course_types_1.CourseTypeName, course_subtypes_1.CourseSubtypeName, 
                courses_1.ID AS CourseID, courses_1.CourseName, tearchers_1.Name AS TeacherName, student_refund_1.Operator,
                    (SELECT   COUNT(0) AS Expr1
                     FROM      (SELECT DISTINCT student_refund.StudentID
                                      FROM      student_refund INNER JOIN
                                                      student_refund AS sr ON sr.StudentID = student_refund.StudentID INNER JOIN
                                                      courses ON student_refund.CourseID = courses.ID INNER JOIN
                                                      course_subtypes ON courses.CourseSubTypeID = course_subtypes.ID INNER JOIN
                                                      course_types ON course_subtypes.CourseTypeID = course_types.ID INNER JOIN
                                                      students ON student_refund.StudentID = students.ID LEFT OUTER JOIN
                                                      tearchers ON courses.TeacherID = tearchers.ID
                                      WHERE   (student_refund.StudentID = @StudentID)) AS ct) AS StudentCount
FROM      student_refund AS student_refund_1 INNER JOIN
                courses AS courses_1 ON student_refund_1.CourseID = courses_1.ID INNER JOIN
                course_subtypes AS course_subtypes_1 ON courses_1.CourseSubTypeID = course_subtypes_1.ID INNER JOIN
                course_types AS course_types_1 ON course_subtypes_1.CourseTypeID = course_types_1.ID INNER JOIN
                students AS students_1 ON student_refund_1.StudentID = students_1.ID LEFT OUTER JOIN
                tearchers AS tearchers_1 ON courses_1.TeacherID = tearchers_1.ID
WHERE   (student_refund_1.ID =
                    (SELECT   MAX(ID) AS MaxID
                     FROM      student_refund AS sr
                     WHERE   (student_refund_1.StudentID = StudentID) AND (student_refund_1.CourseID = CourseID))) AND 
                (student_refund_1.StudentID = @StudentID)
ORDER BY student_refund_1.RefundDate DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentID" ColumnName="StudentID" DataSourceName="ChildrenPalace.dbo.student_refund" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LeaveCourseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="LeaveCourseDataSet" msprop:Generator_UserDSName="LeaveCourseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="LeaveCourse" msprop:Generator_TableClassName="LeaveCourseDataTable" msprop:Generator_TableVarName="tableLeaveCourse" msprop:Generator_TablePropName="LeaveCourse" msprop:Generator_RowDeletingName="LeaveCourseRowDeleting" msprop:Generator_UserTableName="LeaveCourse" msprop:Generator_RowChangingName="LeaveCourseRowChanging" msprop:Generator_RowEvHandlerName="LeaveCourseRowChangeEventHandler" msprop:Generator_RowDeletedName="LeaveCourseRowDeleted" msprop:Generator_RowEvArgName="LeaveCourseRowChangeEvent" msprop:Generator_RowChangedName="LeaveCourseRowChanged" msprop:Generator_RowClassName="LeaveCourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Telephone" msprop:Generator_ColumnVarNameInTable="columnTelephone" msprop:Generator_ColumnPropNameInRow="Telephone" msprop:Generator_ColumnPropNameInTable="TelephoneColumn" msprop:Generator_UserColumnName="Telephone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Address" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_UserColumnName="Address" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ExpireTime" msprop:Generator_ColumnVarNameInTable="columnExpireTime" msprop:Generator_ColumnPropNameInRow="ExpireTime" msprop:Generator_ColumnPropNameInTable="ExpireTimeColumn" msprop:Generator_UserColumnName="ExpireTime" type="xs:dateTime" minOccurs="0" />
              <xs:element name="RefundReason" msprop:Generator_ColumnVarNameInTable="columnRefundReason" msprop:Generator_ColumnPropNameInRow="RefundReason" msprop:Generator_ColumnPropNameInTable="RefundReasonColumn" msprop:Generator_UserColumnName="RefundReason" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RefundDate" msprop:Generator_ColumnVarNameInTable="columnRefundDate" msprop:Generator_ColumnPropNameInRow="RefundDate" msprop:Generator_ColumnPropNameInTable="RefundDateColumn" msprop:Generator_UserColumnName="RefundDate" type="xs:dateTime" />
              <xs:element name="RefundAmount" msprop:Generator_ColumnVarNameInTable="columnRefundAmount" msprop:Generator_ColumnPropNameInRow="RefundAmount" msprop:Generator_ColumnPropNameInTable="RefundAmountColumn" msprop:Generator_UserColumnName="RefundAmount" type="xs:int" />
              <xs:element name="CourseTypeName" msprop:Generator_ColumnVarNameInTable="columnCourseTypeName" msprop:Generator_ColumnPropNameInRow="CourseTypeName" msprop:Generator_ColumnPropNameInTable="CourseTypeNameColumn" msprop:Generator_UserColumnName="CourseTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseSubtypeName" msprop:Generator_ColumnVarNameInTable="columnCourseSubtypeName" msprop:Generator_ColumnPropNameInRow="CourseSubtypeName" msprop:Generator_ColumnPropNameInTable="CourseSubtypeNameColumn" msprop:Generator_UserColumnName="CourseSubtypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherName" msprop:Generator_ColumnVarNameInTable="columnTeacherName" msprop:Generator_ColumnPropNameInRow="TeacherName" msprop:Generator_ColumnPropNameInTable="TeacherNameColumn" msprop:Generator_UserColumnName="TeacherName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Operator" msprop:Generator_ColumnVarNameInTable="columnOperator" msprop:Generator_ColumnPropNameInRow="Operator" msprop:Generator_ColumnPropNameInTable="OperatorColumn" msprop:Generator_UserColumnName="Operator" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseTypeID" msprop:Generator_ColumnVarNameInTable="columnCourseTypeID" msprop:Generator_ColumnPropNameInRow="CourseTypeID" msprop:Generator_ColumnPropNameInTable="CourseTypeIDColumn" msprop:Generator_UserColumnName="CourseTypeID" type="xs:int" />
              <xs:element name="CourseID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="StudentCount" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnStudentCount" msprop:Generator_ColumnPropNameInRow="StudentCount" msprop:Generator_ColumnPropNameInTable="StudentCountColumn" msprop:Generator_UserColumnName="StudentCount" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>